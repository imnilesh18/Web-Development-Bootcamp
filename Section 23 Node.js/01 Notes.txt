Why use Framework: Mayonnaise
Reuse components. Reduce  overhead

Node: "An asynchronous event-driven JavaScript runtime, Node.js is designed to build scalable network applications." -- According to Node.js

Node uses V8 Engine(written in C and C++)
JS can be used to run in browser but with node we can run in both desktop or server site. like own local computer

Asynchronous event driven mean: example- delivery of Amazon parcel

Node helps to build application on computer using JavaScript, server - own computer  not browser.
Node - Popular, JavaScript Fullstack, Scales(for large scale professional projects), Non-blocking, Ecosystem(npm).





node -v -> to check node version installed.
Node REPL -> Node Read Eval Print Loop 
is a computer environment where user inputs are read and evaluated, and then the results are returned to the user.
To initiate Node REPL: command
node
Welcome to Node.js v20.11.0.
Type ".help" for more information.
> .help
.break    Sometimes you get stuck, this gets you out
.clear    Alias for .break
.editor   Enter editor mode
.exit     Exit the REPL
.help     Print this help message
.load     Load JS from a file into the REPL session
.save     Save all evaluated commands in this REPL session to a file

Press Ctrl+C to abort current expression, Ctrl+D to exit the REPL
> .exit

node
Welcome to Node.js v20.11.0.
Type ".help" for more information.
> 5+8
13
> let a = 3
undefined
> a + 12
15

index.js
console.log("Hello From Node!");

you can hit tab to check if you're in the same directory.
node index.js 
Hello From NodeJS!

Native Node Modules:
What are Native Modules?
starting tool set, already 

NPM
Node Package Manager
It's basically a place which collects multiple modules that people have built for Node and it's created by GitHub organization and it's a really great place to find code that other people have written with utilities and tools to help you with writing your Node applications.

Native Node Module: starting tool set then NPM is weird and wonderful tools.
NPM : Community tool library

npm init
initialization utility: package.json will be created


Install NPM Package:
npm install <something(name of the package)>

npm i sillyname

npm i sillyname other_package1 other_package2 (means you can give space to install other packages also in same command)

it'll add dependencies in package.json

also node_module folder will be created

ESM: ECMAScript Modules, uses "import" keyword
CJS : CommonJS , uses: "require" keyword
to use ESM: package.json, "type": "module",

import xxx from "string"
xxx : method or object that we want to import
from
string: specifies which package or module we want to get hold of this thing from.








